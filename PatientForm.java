/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PatientForm.java
 *
 * Created on Oct 26, 2010, 8:33:15 PM
 */

package mirabalp4;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Frostysmooth aka Justin Mirabal
 */
public class PatientForm extends javax.swing.JFrame {

    private String patientName = "";
    private Color fColor = Color.white;
    private int age = 18;
    private int temp = 75;
    private int condition = 1;//1=Great, 2=Good, 3=Poor, 4=Still Alive
    //private int mood = 1;//1=Angry, 2=Happy, 3=Tired, 4=Sad
    private int time = 1;//1=Morning, 2=Afternoon, 3=Night
    private String condText = "Condition: ";
    private String timeText = "Time: ";
    private String moodText1, moodText2, moodText3, moodText4;
    private boolean chkSelected;

    private JTextField filename = new JTextField(), dir = new JTextField();

    public PatientForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        grpCondition = new javax.swing.ButtonGroup();
        grpTime = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sldAge = new javax.swing.JSlider();
        lblAge = new javax.swing.JLabel();
        sldTemp = new javax.swing.JSlider();
        lblTemp = new javax.swing.JLabel();
        rbGreat = new javax.swing.JRadioButton();
        rbGood = new javax.swing.JRadioButton();
        rbPoor = new javax.swing.JRadioButton();
        rbAlive = new javax.swing.JRadioButton();
        lblCondition = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        rbMorning = new javax.swing.JRadioButton();
        rbAfternoon = new javax.swing.JRadioButton();
        rbNight = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        chkAngry = new javax.swing.JCheckBox();
        chkHappy = new javax.swing.JCheckBox();
        chkTired = new javax.swing.JCheckBox();
        chkSad = new javax.swing.JCheckBox();
        cmboDoctor = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        spnBones = new javax.swing.JSpinner();
        btnColor = new javax.swing.JButton();
        btnSummary = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSummary = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Justin Mirabal P4:  GUI NetBeans Patient Form");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Patient's Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 249, -1));

        jLabel2.setText("Age:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 37, -1, -1));

        sldAge.setMajorTickSpacing(10);
        sldAge.setMinimum(18);
        sldAge.setMinorTickSpacing(5);
        sldAge.setPaintLabels(true);
        sldAge.setPaintTicks(true);
        sldAge.setValue(18);
        sldAge.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sldAge.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldAgeStateChanged(evt);
            }
        });
        getContentPane().add(sldAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 265, -1));

        lblAge.setText("Age = 18");
        getContentPane().add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        sldTemp.setMajorTickSpacing(5);
        sldTemp.setMaximum(110);
        sldTemp.setMinimum(75);
        sldTemp.setMinorTickSpacing(1);
        sldTemp.setOrientation(javax.swing.JSlider.VERTICAL);
        sldTemp.setPaintLabels(true);
        sldTemp.setPaintTicks(true);
        sldTemp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sldTemp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldTempStateChanged(evt);
            }
        });
        getContentPane().add(sldTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 244));

        lblTemp.setText("Patient's Temp: 75");
        getContentPane().add(lblTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 120, -1));

        grpCondition.add(rbGreat);
        rbGreat.setSelected(true);
        rbGreat.setText("Great");
        rbGreat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGreatActionPerformed(evt);
            }
        });
        getContentPane().add(rbGreat, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, -1, 20));

        grpCondition.add(rbGood);
        rbGood.setText("Good");
        rbGood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGoodActionPerformed(evt);
            }
        });
        getContentPane().add(rbGood, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, -1, 20));

        grpCondition.add(rbPoor);
        rbPoor.setText("Poor");
        rbPoor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPoorActionPerformed(evt);
            }
        });
        getContentPane().add(rbPoor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, 20));

        grpCondition.add(rbAlive);
        rbAlive.setText("Alive");
        rbAlive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAliveActionPerformed(evt);
            }
        });
        getContentPane().add(rbAlive, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, -1, 20));

        lblCondition.setText("Condition: Great");
        getContentPane().add(lblCondition, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, 20));

        lblTime.setText("Time: Morning");
        getContentPane().add(lblTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 90, -1));

        grpTime.add(rbMorning);
        rbMorning.setSelected(true);
        rbMorning.setText("Morning");
        rbMorning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMorningActionPerformed(evt);
            }
        });
        getContentPane().add(rbMorning, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        grpTime.add(rbAfternoon);
        rbAfternoon.setText("Afternoon");
        rbAfternoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAfternoonActionPerformed(evt);
            }
        });
        getContentPane().add(rbAfternoon, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        grpTime.add(rbNight);
        rbNight.setText("Night");
        rbNight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNightActionPerformed(evt);
            }
        });
        getContentPane().add(rbNight, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 92, 720, 10));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 10, 90));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 10, 90));

        jLabel4.setText("Mood (Check all that apply)");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, -1));

        chkAngry.setText("Angry");
        chkAngry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAngryActionPerformed(evt);
            }
        });
        getContentPane().add(chkAngry, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, -1, -1));

        chkHappy.setText("Happy");
        chkHappy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHappyActionPerformed(evt);
            }
        });
        getContentPane().add(chkHappy, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        chkTired.setText("Tired");
        chkTired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTiredActionPerformed(evt);
            }
        });
        getContentPane().add(chkTired, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, -1, -1));

        chkSad.setText("Sad");
        chkSad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSadActionPerformed(evt);
            }
        });
        getContentPane().add(chkSad, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, -1, -1));

        cmboDoctor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dr. Funnybone", "Dr. Welt", "Dr. Break", "Dr. Hurt" }));
        getContentPane().add(cmboDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 110, -1));

        jLabel3.setText("Prefered Doctor:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, 20));

        spnBones.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Broken Bones"));
        spnBones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnBonesStateChanged(evt);
            }
        });
        getContentPane().add(spnBones, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 130, 40));

        btnColor.setBackground(new java.awt.Color(255, 255, 255));
        btnColor.setText("Face Color");
        btnColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnColorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnColorMouseExited(evt);
            }
        });
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });
        getContentPane().add(btnColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 100, -1));

        btnSummary.setText("Summarize");
        btnSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSummaryActionPerformed(evt);
            }
        });
        getContentPane().add(btnSummary, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, -1, -1));

        btnSave.setText("Save Summary");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, -1, -1));

        txtSummary.setColumns(20);
        txtSummary.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 13));
        txtSummary.setRows(5);
        jScrollPane1.setViewportView(txtSummary);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, 380, 310));

        jLabel5.setText("Summary");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, -1, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 10, 400));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 190, 10));
        getContentPane().add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 192, 190, 10));
        getContentPane().add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 190, 10));

        pack();
    }// </editor-fold>                        

    
    private void sldAgeStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        age = sldAge.getValue();
        lblAge.setText("Age = " + age);
    }                                   

    private void sldTempStateChanged(javax.swing.event.ChangeEvent evt) {                                     
        temp = sldTemp.getValue();
        lblTemp.setText("Patient's Temp: " + temp);
        if(temp > 105)
        {
            lblTemp.setText("!!Swine Flu Bound!!");
            lblTemp.setForeground(Color.RED);
        }
        else
            lblTemp.setForeground(Color.DARK_GRAY);
    }                                    

    private void rbGreatActionPerformed(java.awt.event.ActionEvent evt) {                                        
        condText = "Condition: Great";
        condition = 1;
        updateConditionLabel();
    }                                       

    private void rbGoodActionPerformed(java.awt.event.ActionEvent evt) {                                       
        condText = "Condition: Good";
        condition = 2;
        updateConditionLabel();
    }                                      

    private void rbPoorActionPerformed(java.awt.event.ActionEvent evt) {                                       
       condText = "Condition:  Poor";
       condition = 3;
       updateConditionLabel();
    }                                      

    private void rbAliveActionPerformed(java.awt.event.ActionEvent evt) {                                        
        condText = "Condition: Alive, Barely!";
        condition = 4;
        updateConditionLabel();
    }                                       

    private void rbMorningActionPerformed(java.awt.event.ActionEvent evt) {                                          
        timeText = "Time: Morning";
        time = 1;
        updateTimeLabel();
    }                                         

    private void rbAfternoonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        timeText = "Time: Afternoon";
        time = 2;
        updateTimeLabel();
    }                                           

    private void rbNightActionPerformed(java.awt.event.ActionEvent evt) {                                        
        timeText = "Time: Night";
        time = 3;
        updateTimeLabel();
    }                                       

    private void chkAngryActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //mood = 1;
        if(chkAngry.isSelected() == true)
            moodText1 = "Mood: Angry-It's O-K! Deep breath";
        else
            moodText1 = "";
    }                                        

    private void chkHappyActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //mood = 2;
        if(chkHappy.isSelected() == true)
            moodText2 = "Mood: Happy-What are you doing here GO HOME";
        else
            moodText2 = "";
    }                                        

    private void chkTiredActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //mood = 3;
        if(chkTired.isSelected() == true)
            moodText3 = "Mood: Tired-Get some sleep then";
        else
            moodText3 = "";
    }                                        

    private void chkSadActionPerformed(java.awt.event.ActionEvent evt) {                                       
        //mood = 4;
        if(chkSad.isSelected() == true)
            moodText4 = "Mood: Sad-Here's a tissue";
        else
            moodText4 = "";
    }                                      

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {                                         
        btnColor.setBackground(fColor);
        fColor = JColorChooser.showDialog(null, "General Face Color", fColor);
        System.out.println(fColor.toString());
        
        if(fColor != null){
            btnColor.setBackground(fColor);
        }
    }                                        

    private void btnSummaryActionPerformed(java.awt.event.ActionEvent evt) {                                           
        txtSummary.setText("Patient Information for: " + txtName.getText() +
                "\r\n" + "Arrival " + lblTime.getText() +
                "\r\n" + "Face Color " + fColor.toString() +
                "\r\n" + "Patient's Age: " + age +
                "\r\n" + "Temperature: " + temp +
                "\r\n" + "Prefered Doctor: " + cmboDoctor.getSelectedItem() +
                "\r\n" + condText +
                "\r\n" + "Possible Broken Bones: " + spnBones.getValue() +
                "\r\n" + moodText1 +
                "\r\n" + moodText2 +
                "\r\n" + moodText3 +
                "\r\n" + moodText4);
    }                                          


    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        


        File fFile = new File(".txt");
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));//
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);//
        chooser.setSelectedFile(fFile);
        int response = 0;
    do{
        int result = chooser.showSaveDialog(this);
       
        if(result == JFileChooser.APPROVE_OPTION){
            fFile = chooser.getSelectedFile();
            if(fFile.exists()){
                 response = JOptionPane.showConfirmDialog(null, 
                        "Overwrite Existing File?", "FILE ALREADY EXISTS",
                        JOptionPane.OK_CANCEL_OPTION, 
                        JOptionPane.QUESTION_MESSAGE);
           }
        }

        String s = txtSummary.getText();

        try{
        PrintWriter pw = new PrintWriter(fFile);

        pw.print("\r\n\r\n");
        pw.print(s);
        pw.close();
        }catch (IOException e){
        }

    }while(response == JOptionPane.CANCEL_OPTION);
    }                                       



    private void spnBonesStateChanged(javax.swing.event.ChangeEvent evt) {                                      
        spnBones.getValue();
    }                                     

    private void btnColorMouseEntered(java.awt.event.MouseEvent evt) {                                      
       Font font = new Font("SERIF", Font.BOLD, 11);
       btnColor.setFont(font);
    }                                     

    private void btnColorMouseExited(java.awt.event.MouseEvent evt) {                                     
        Font font = new Font("Tahoma", Font.PLAIN, 11);
       btnColor.setFont(font);
    }                                    


private void updateConditionLabel()
{
    lblCondition.setText(condText);
}

private void updateTimeLabel()
{
    lblTime.setText(timeText);
}


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnColor;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSummary;
    private javax.swing.JCheckBox chkAngry;
    private javax.swing.JCheckBox chkHappy;
    private javax.swing.JCheckBox chkSad;
    private javax.swing.JCheckBox chkTired;
    private javax.swing.JComboBox cmboDoctor;
    private javax.swing.ButtonGroup grpCondition;
    private javax.swing.ButtonGroup grpTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCondition;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JLabel lblTime;
    private javax.swing.JRadioButton rbAfternoon;
    private javax.swing.JRadioButton rbAlive;
    private javax.swing.JRadioButton rbGood;
    private javax.swing.JRadioButton rbGreat;
    private javax.swing.JRadioButton rbMorning;
    private javax.swing.JRadioButton rbNight;
    private javax.swing.JRadioButton rbPoor;
    private javax.swing.JSlider sldAge;
    private javax.swing.JSlider sldTemp;
    private javax.swing.JSpinner spnBones;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtSummary;
    // End of variables declaration                   

}
